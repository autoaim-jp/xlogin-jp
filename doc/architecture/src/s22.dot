
digraph G {


rankdir=LR
subgraph cluster_client {
client [label="client (aGET,aPOST\nuGET,uPOSTが可)"]
}
subgraph cluster_service {
service [label="service (aGET,aPOST,uGET,uPOSTは好ましくない\nsGET,sPOSTが可)"]
}
subgraph cluster_authPage {
authPage
}
subgraph cluster_filter {
filter
}
subgraph cluster_api {
"authApi"
"storageApi"
"userApi"
}

anonGET [label="anonGET・・・anonymous GET, accessTokenがないGET\n公開ファイルの取得など" shape=note]
anonPOST [label="anonPOST・・・anonymous POST, accessTokenがないPOST\n匿名投票など" shape=note]
userGET [label="userGET・・・user GET, accessTokenがあるGET\nservice埋め込みのアクセスカウンタなど" shape=note]
userPOST [label="userPOST・・・user POST, accessTokenがあるPOST\nservice埋め込みのアクセスカウンタのカウントアップなど" shape=note]
serviceGET [label="uGET・・・(accessTokenと)clientSignatureがあるGET\nユーザバックアップメールアドレスの取得など" shape=note]
servicePOST [label="uPOST・・・(accessTokenと)clientSignatureがあるPOST\n非公開ファイルの編集など" shape=note]

"client"->"service" [label="(サービスの仕様に任せる)"]
"client"->"authPage" [label="aGET(ページの取得),aPOST(ログイン,権限選択),その他は不可"]
"client"->"filter" [label="aPOSTは不可,aGET(変換されたデータの取得),uGET(アクセスカウンタ),uPOST(アクセスカウンタ)"]
"client"->"authApi" [label="全て不可"]
"client"->"storageApi" [label="不可にする？(clientからのアクセスは設定したfilterからのみなどがいいかも)"]
"client"->"userApi" [label="不可にする？(clientからのアクセスは設定したfilterからのみなどがいいかも)"]


"service"->"authPage" [label="全て不可(authPageへaGETのリダイレクトはclientから,accessTokenをsPOSTで取得するのはauthApiへ)"]
"service"->"filter" [label="全て可"]
"service"->"authApi" [label="sPOST(codeでaccessTokenを取得),その他は不可"]
"service"->"storageApi" [label="sGET,sPOST,その他は好ましくない(検出/拒否したほうがいい？)"]
"service"->"userApi" [label="sGET,sPOST,その他は好ましくない(検出/拒否したほうがいい？)"]


"authPage"->"authApi" [label="sPOST(connectからthroughかconfirmまで),その他は不可"]


"filter"->"authApi" [label="全て可"]
"filter"->"storageApi" [label="全て可"]
"filter"->"userApi" [label="全て可"]



























}















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































