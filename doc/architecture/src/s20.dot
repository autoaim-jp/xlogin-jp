
digraph G {


rankdir=LR
subgraph cluster_client {
client
}
subgraph cluster_service {
service [label="service(一般)"]
service2 [label="service(埋め込み)"]
}
subgraph cluster_authPage {
authPage
}
subgraph cluster_filter {
filter
}
subgraph cluster_api {
"authApi"
"storageApi"
"userApi"
}
subgraph cluster_db {
RDBMS
memoryDB
disk

}

"client"->"service" [label="service経由でAPIを呼び出し、serviceで加工する"]
"client"->"authPage" [label="ログインする(accessTokenをserviceに渡す機能だけ)"]
"client"->"filter" [label="非ログイン時に、accessTokenなしでファイルを受信する\n(sanitizeされたブログページなど)"]

"client"->"storageApi" [label="コンソールなどブラウザ以外で、accessTokenなしでファイルを\n受信する(公開JSONなど？filterを通したほうが安全かも)"]
"client"->"userApi" [label="コンソールなどブラウザ以外で、accessTokenなしで\nユーザ情報を取得する(メンバの公開情報など)"]


"service"->"authPage" [label="ログインのリダイレクトとaccessTokenの取得のみ"]
"service"->"filter" [label="データのETLの際、標準のフィルタがあれば利用"]

"service"->"storageApi" [label="accessTokenなしで\nファイルを受信する(公開JSON、公開鍵など)\naccessTokenでファイルを\n受信、変更する(ブログ記事の投稿など)"]
"service"->"userApi" [label="accessTokenなしで\nユーザ情報を取得する(メンバの公開情報など)\naccessTokenでユーザ情報を\n取得、更新する(プロフィール情報など)"]


"service"->"service2" [label="serviceがserviceを呼び出すこともある"]

"authPage"->"authApi" [label="ユーザ情報と権限を送信し、codeの取得をする"]



"filter"->"storageApi" [label="ファイルをサニタイズするなどして受信\nファイルを取得し、変換して別の場所に保存"]
"filter"->"userApi" [label="ユーザ情報をフィルタして受信"]


"authApi"->"RDBMS" [label="ユーザの追加と検証、accessTokenの登録"]
"authApi"->"memoryDB" [label="セッション情報の読み書き、codeの登録"]
"authApi"->"disk" [label="ユーザ追加時にフォルダ作成"]

"storageApi"->"RDBMS" [label="fileメタ情報、JSONの取得と更新"]
"storageApi"->"disk" [label="fileの取得と更新"]

"userApi"->"RDBMS" [label="user情報の取得と更新"]

















}















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































